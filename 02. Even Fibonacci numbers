// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function findFibonacci(upUntil) {
	var arr = [1,2];
	for(var i = 1; arr[i] <= upUntil; i++) {
		arr.push(arr[i - 1] + arr[i]);
	}
	arr.pop();
	return arr;
}

var fullArr = findFibonacci(4000000);

function findSum(arr, divisibleBy) {
	var sum = 0;
	for(var i = 0; i < arr.length; i++) {
		if(arr[i] % divisibleBy === 0) {
			console.log(sum);
			sum += arr[i];
		}
	}
	return sum;	
}

findSum(fullArr, 2);
